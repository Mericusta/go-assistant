     0  *ast.FuncDecl {
     1  .  Recv: *ast.FieldList {
     2  .  .  Opening: -
     3  .  .  List: []*ast.Field (len = 1) {
     4  .  .  .  0: *ast.Field {
     5  .  .  .  .  Names: []*ast.Ident (len = 1) {
     6  .  .  .  .  .  0: *ast.Ident {
     7  .  .  .  .  .  .  NamePos: -
     8  .  .  .  .  .  .  Name: "t"
     9  .  .  .  .  .  .  Obj: *ast.Object {
    10  .  .  .  .  .  .  .  Kind: var
    11  .  .  .  .  .  .  .  Name: "t"
    12  .  .  .  .  .  .  .  Decl: *(obj @ 4)
    13  .  .  .  .  .  .  }
    14  .  .  .  .  .  }
    15  .  .  .  .  }
    16  .  .  .  .  Type: *ast.StarExpr {
    17  .  .  .  .  .  Star: -
    18  .  .  .  .  .  X: *ast.IndexListExpr {
    19  .  .  .  .  .  .  X: *ast.Ident {
    20  .  .  .  .  .  .  .  NamePos: -
    21  .  .  .  .  .  .  .  Name: "TwoTypeTemplateStruct"
    22  .  .  .  .  .  .  .  Obj: *ast.Object {
    23  .  .  .  .  .  .  .  .  Kind: type
    24  .  .  .  .  .  .  .  .  Name: "TwoTypeTemplateStruct"
    25  .  .  .  .  .  .  .  .  Decl: *ast.TypeSpec {
    26  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
    27  .  .  .  .  .  .  .  .  .  .  NamePos: -
    28  .  .  .  .  .  .  .  .  .  .  Name: "TwoTypeTemplateStruct"
    29  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 22)
    30  .  .  .  .  .  .  .  .  .  }
    31  .  .  .  .  .  .  .  .  .  TypeParams: *ast.FieldList {
    32  .  .  .  .  .  .  .  .  .  .  Opening: -
    33  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
    34  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    35  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    36  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    37  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    38  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "K"
    39  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    40  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: type
    41  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "K"
    42  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 34)
    43  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    44  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    45  .  .  .  .  .  .  .  .  .  .  .  .  }
    46  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
    47  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    48  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TypeConstraints"
    49  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    50  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: type
    51  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TypeConstraints"
    52  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *ast.TypeSpec {
    53  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
    54  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    55  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TypeConstraints"
    56  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 49)
    57  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Assign: -
    59  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.InterfaceType {
    60  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Interface: -
    61  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Methods: *ast.FieldList {
    62  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: -
    63  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
    64  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
    65  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.BinaryExpr {
    66  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
    67  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
    68  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    69  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    70  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int8"
    71  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
    73  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: |
    74  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
    75  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    76  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "int16"
    77  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    78  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    79  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
    80  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: |
    81  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
    82  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    83  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "uint8"
    84  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    85  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: -
    87  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: |
    88  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
    89  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
    90  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "uint16"
    91  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    92  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    93  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: -
    96  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
    98  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
    99  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   100  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   101  .  .  .  .  .  .  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  .  .  .  .  .  }
   103  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   104  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   105  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "V"
   108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: type
   110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "V"
   111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 103)
   112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  .  .  .  .  .  }
   115  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   116  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   117  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "any"
   118  .  .  .  .  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  .  .  .  .  }
   120  .  .  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  .  .  .  Closing: -
   122  .  .  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  .  .  .  Assign: -
   124  .  .  .  .  .  .  .  .  .  Type: *ast.StructType {
   125  .  .  .  .  .  .  .  .  .  .  Struct: -
   126  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {
   127  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   128  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   129  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   130  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
   134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   135  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   136  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
   137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 129)
   138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   139  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   141  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.MapType {
   142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Map: -
   143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "K"
   146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 39)
   147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "V"
   151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 108)
   152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  .  .  .  .  .  }
   155  .  .  .  .  .  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   157  .  .  .  .  .  .  .  .  .  .  }
   158  .  .  .  .  .  .  .  .  .  .  Incomplete: false
   159  .  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  }
   161  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  }
   163  .  .  .  .  .  .  Lbrack: -
   164  .  .  .  .  .  .  Indices: []ast.Expr (len = 2) {
   165  .  .  .  .  .  .  .  0: *ast.Ident {
   166  .  .  .  .  .  .  .  .  NamePos: -
   167  .  .  .  .  .  .  .  .  Name: "K"
   168  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  .  1: *ast.Ident {
   170  .  .  .  .  .  .  .  .  NamePos: -
   171  .  .  .  .  .  .  .  .  Name: "V"
   172  .  .  .  .  .  .  .  }
   173  .  .  .  .  .  .  }
   174  .  .  .  .  .  .  Rbrack: -
   175  .  .  .  .  .  }
   176  .  .  .  .  }
   177  .  .  .  }
   178  .  .  }
   179  .  .  Closing: -
   180  .  }
   181  .  Name: *ast.Ident {
   182  .  .  NamePos: -
   183  .  .  Name: "KVSlice"
   184  .  }
   185  .  Type: *ast.FuncType {
   186  .  .  Func: -
   187  .  .  Params: *ast.FieldList {
   188  .  .  .  Opening: -
   189  .  .  .  List: []*ast.Field (len = 2) {
   190  .  .  .  .  0: *ast.Field {
   191  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   192  .  .  .  .  .  .  0: *ast.Ident {
   193  .  .  .  .  .  .  .  NamePos: -
   194  .  .  .  .  .  .  .  Name: "k"
   195  .  .  .  .  .  .  .  Obj: *ast.Object {
   196  .  .  .  .  .  .  .  .  Kind: var
   197  .  .  .  .  .  .  .  .  Name: "k"
   198  .  .  .  .  .  .  .  .  Decl: *(obj @ 190)
   199  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  }
   201  .  .  .  .  .  }
   202  .  .  .  .  .  Type: *ast.Ident {
   203  .  .  .  .  .  .  NamePos: -
   204  .  .  .  .  .  .  Name: "K"
   205  .  .  .  .  .  }
   206  .  .  .  .  }
   207  .  .  .  .  1: *ast.Field {
   208  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   209  .  .  .  .  .  .  0: *ast.Ident {
   210  .  .  .  .  .  .  .  NamePos: -
   211  .  .  .  .  .  .  .  Name: "v"
   212  .  .  .  .  .  .  .  Obj: *ast.Object {
   213  .  .  .  .  .  .  .  .  Kind: var
   214  .  .  .  .  .  .  .  .  Name: "v"
   215  .  .  .  .  .  .  .  .  Decl: *(obj @ 207)
   216  .  .  .  .  .  .  .  }
   217  .  .  .  .  .  .  }
   218  .  .  .  .  .  }
   219  .  .  .  .  .  Type: *ast.Ident {
   220  .  .  .  .  .  .  NamePos: -
   221  .  .  .  .  .  .  Name: "V"
   222  .  .  .  .  .  }
   223  .  .  .  .  }
   224  .  .  .  }
   225  .  .  .  Closing: -
   226  .  .  }
   227  .  .  Results: *ast.FieldList {
   228  .  .  .  Opening: -
   229  .  .  .  List: []*ast.Field (len = 2) {
   230  .  .  .  .  0: *ast.Field {
   231  .  .  .  .  .  Type: *ast.ArrayType {
   232  .  .  .  .  .  .  Lbrack: -
   233  .  .  .  .  .  .  Elt: *ast.Ident {
   234  .  .  .  .  .  .  .  NamePos: -
   235  .  .  .  .  .  .  .  Name: "K"
   236  .  .  .  .  .  .  }
   237  .  .  .  .  .  }
   238  .  .  .  .  }
   239  .  .  .  .  1: *ast.Field {
   240  .  .  .  .  .  Type: *ast.ArrayType {
   241  .  .  .  .  .  .  Lbrack: -
   242  .  .  .  .  .  .  Elt: *ast.Ident {
   243  .  .  .  .  .  .  .  NamePos: -
   244  .  .  .  .  .  .  .  Name: "V"
   245  .  .  .  .  .  .  }
   246  .  .  .  .  .  }
   247  .  .  .  .  }
   248  .  .  .  }
   249  .  .  .  Closing: -
   250  .  .  }
   251  .  }
   252  .  Body: *ast.BlockStmt {
   253  .  .  Lbrace: -
   254  .  .  List: []ast.Stmt (len = 4) {
   255  .  .  .  0: *ast.AssignStmt {
   256  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   257  .  .  .  .  .  0: *ast.Ident {
   258  .  .  .  .  .  .  NamePos: -
   259  .  .  .  .  .  .  Name: "ks"
   260  .  .  .  .  .  .  Obj: *ast.Object {
   261  .  .  .  .  .  .  .  Kind: var
   262  .  .  .  .  .  .  .  Name: "ks"
   263  .  .  .  .  .  .  .  Decl: *(obj @ 255)
   264  .  .  .  .  .  .  }
   265  .  .  .  .  .  }
   266  .  .  .  .  }
   267  .  .  .  .  TokPos: -
   268  .  .  .  .  Tok: :=
   269  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   270  .  .  .  .  .  0: *ast.CallExpr {
   271  .  .  .  .  .  .  Fun: *ast.Ident {
   272  .  .  .  .  .  .  .  NamePos: -
   273  .  .  .  .  .  .  .  Name: "make"
   274  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  Lparen: -
   276  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
   277  .  .  .  .  .  .  .  0: *ast.ArrayType {
   278  .  .  .  .  .  .  .  .  Lbrack: -
   279  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   280  .  .  .  .  .  .  .  .  .  NamePos: -
   281  .  .  .  .  .  .  .  .  .  Name: "K"
   282  .  .  .  .  .  .  .  .  }
   283  .  .  .  .  .  .  .  }
   284  .  .  .  .  .  .  .  1: *ast.BasicLit {
   285  .  .  .  .  .  .  .  .  ValuePos: -
   286  .  .  .  .  .  .  .  .  Kind: INT
   287  .  .  .  .  .  .  .  .  Value: "0"
   288  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  2: *ast.CallExpr {
   290  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   291  .  .  .  .  .  .  .  .  .  NamePos: -
   292  .  .  .  .  .  .  .  .  .  Name: "len"
   293  .  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  .  .  Lparen: -
   295  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   296  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   297  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   298  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   299  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   300  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9)
   301  .  .  .  .  .  .  .  .  .  .  }
   302  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   303  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   304  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
   305  .  .  .  .  .  .  .  .  .  .  }
   306  .  .  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  .  .  Ellipsis: -
   309  .  .  .  .  .  .  .  .  Rparen: -
   310  .  .  .  .  .  .  .  }
   311  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  Ellipsis: -
   313  .  .  .  .  .  .  Rparen: -
   314  .  .  .  .  .  }
   315  .  .  .  .  }
   316  .  .  .  }
   317  .  .  .  1: *ast.AssignStmt {
   318  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   319  .  .  .  .  .  0: *ast.Ident {
   320  .  .  .  .  .  .  NamePos: -
   321  .  .  .  .  .  .  Name: "vs"
   322  .  .  .  .  .  .  Obj: *ast.Object {
   323  .  .  .  .  .  .  .  Kind: var
   324  .  .  .  .  .  .  .  Name: "vs"
   325  .  .  .  .  .  .  .  Decl: *(obj @ 317)
   326  .  .  .  .  .  .  }
   327  .  .  .  .  .  }
   328  .  .  .  .  }
   329  .  .  .  .  TokPos: -
   330  .  .  .  .  Tok: :=
   331  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   332  .  .  .  .  .  0: *ast.CallExpr {
   333  .  .  .  .  .  .  Fun: *ast.Ident {
   334  .  .  .  .  .  .  .  NamePos: -
   335  .  .  .  .  .  .  .  Name: "make"
   336  .  .  .  .  .  .  }
   337  .  .  .  .  .  .  Lparen: -
   338  .  .  .  .  .  .  Args: []ast.Expr (len = 3) {
   339  .  .  .  .  .  .  .  0: *ast.ArrayType {
   340  .  .  .  .  .  .  .  .  Lbrack: -
   341  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
   342  .  .  .  .  .  .  .  .  .  NamePos: -
   343  .  .  .  .  .  .  .  .  .  Name: "V"
   344  .  .  .  .  .  .  .  .  }
   345  .  .  .  .  .  .  .  }
   346  .  .  .  .  .  .  .  1: *ast.BasicLit {
   347  .  .  .  .  .  .  .  .  ValuePos: -
   348  .  .  .  .  .  .  .  .  Kind: INT
   349  .  .  .  .  .  .  .  .  Value: "0"
   350  .  .  .  .  .  .  .  }
   351  .  .  .  .  .  .  .  2: *ast.CallExpr {
   352  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   353  .  .  .  .  .  .  .  .  .  NamePos: -
   354  .  .  .  .  .  .  .  .  .  Name: "len"
   355  .  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  .  .  Lparen: -
   357  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   358  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   359  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   360  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   361  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   362  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9)
   363  .  .  .  .  .  .  .  .  .  .  }
   364  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   365  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   366  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
   367  .  .  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  .  }
   370  .  .  .  .  .  .  .  .  Ellipsis: -
   371  .  .  .  .  .  .  .  .  Rparen: -
   372  .  .  .  .  .  .  .  }
   373  .  .  .  .  .  .  }
   374  .  .  .  .  .  .  Ellipsis: -
   375  .  .  .  .  .  .  Rparen: -
   376  .  .  .  .  .  }
   377  .  .  .  .  }
   378  .  .  .  }
   379  .  .  .  2: *ast.RangeStmt {
   380  .  .  .  .  For: -
   381  .  .  .  .  Key: *ast.Ident {
   382  .  .  .  .  .  NamePos: -
   383  .  .  .  .  .  Name: "k"
   384  .  .  .  .  .  Obj: *ast.Object {
   385  .  .  .  .  .  .  Kind: var
   386  .  .  .  .  .  .  Name: "k"
   387  .  .  .  .  .  .  Decl: *ast.AssignStmt {
   388  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   389  .  .  .  .  .  .  .  .  0: *(obj @ 381)
   390  .  .  .  .  .  .  .  .  1: *ast.Ident {
   391  .  .  .  .  .  .  .  .  .  NamePos: -
   392  .  .  .  .  .  .  .  .  .  Name: "v"
   393  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   394  .  .  .  .  .  .  .  .  .  .  Kind: var
   395  .  .  .  .  .  .  .  .  .  .  Name: "v"
   396  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 387)
   397  .  .  .  .  .  .  .  .  .  }
   398  .  .  .  .  .  .  .  .  }
   399  .  .  .  .  .  .  .  }
   400  .  .  .  .  .  .  .  TokPos: -
   401  .  .  .  .  .  .  .  Tok: :=
   402  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   403  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
   404  .  .  .  .  .  .  .  .  .  OpPos: -
   405  .  .  .  .  .  .  .  .  .  Op: range
   406  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   407  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   408  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   409  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   410  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 9)
   411  .  .  .  .  .  .  .  .  .  .  }
   412  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   413  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   414  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
   415  .  .  .  .  .  .  .  .  .  .  }
   416  .  .  .  .  .  .  .  .  .  }
   417  .  .  .  .  .  .  .  .  }
   418  .  .  .  .  .  .  .  }
   419  .  .  .  .  .  .  }
   420  .  .  .  .  .  }
   421  .  .  .  .  }
   422  .  .  .  .  Value: *(obj @ 390)
   423  .  .  .  .  TokPos: -
   424  .  .  .  .  Tok: :=
   425  .  .  .  .  Range: -
   426  .  .  .  .  X: *(obj @ 406)
   427  .  .  .  .  Body: *ast.BlockStmt {
   428  .  .  .  .  .  Lbrace: -
   429  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   430  .  .  .  .  .  .  0: *ast.AssignStmt {
   431  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   432  .  .  .  .  .  .  .  .  0: *ast.Ident {
   433  .  .  .  .  .  .  .  .  .  NamePos: -
   434  .  .  .  .  .  .  .  .  .  Name: "ks"
   435  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 260)
   436  .  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  TokPos: -
   439  .  .  .  .  .  .  .  Tok: =
   440  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   441  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   442  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   443  .  .  .  .  .  .  .  .  .  .  NamePos: -
   444  .  .  .  .  .  .  .  .  .  .  Name: "append"
   445  .  .  .  .  .  .  .  .  .  }
   446  .  .  .  .  .  .  .  .  .  Lparen: -
   447  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   448  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   449  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   450  .  .  .  .  .  .  .  .  .  .  .  Name: "ks"
   451  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 260)
   452  .  .  .  .  .  .  .  .  .  .  }
   453  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   454  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   455  .  .  .  .  .  .  .  .  .  .  .  Name: "k"
   456  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 384)
   457  .  .  .  .  .  .  .  .  .  .  }
   458  .  .  .  .  .  .  .  .  .  }
   459  .  .  .  .  .  .  .  .  .  Ellipsis: -
   460  .  .  .  .  .  .  .  .  .  Rparen: -
   461  .  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  .  }
   463  .  .  .  .  .  .  }
   464  .  .  .  .  .  .  1: *ast.AssignStmt {
   465  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   466  .  .  .  .  .  .  .  .  0: *ast.Ident {
   467  .  .  .  .  .  .  .  .  .  NamePos: -
   468  .  .  .  .  .  .  .  .  .  Name: "vs"
   469  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 322)
   470  .  .  .  .  .  .  .  .  }
   471  .  .  .  .  .  .  .  }
   472  .  .  .  .  .  .  .  TokPos: -
   473  .  .  .  .  .  .  .  Tok: =
   474  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   475  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   476  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   477  .  .  .  .  .  .  .  .  .  .  NamePos: -
   478  .  .  .  .  .  .  .  .  .  .  Name: "append"
   479  .  .  .  .  .  .  .  .  .  }
   480  .  .  .  .  .  .  .  .  .  Lparen: -
   481  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   482  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   483  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   484  .  .  .  .  .  .  .  .  .  .  .  Name: "vs"
   485  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 322)
   486  .  .  .  .  .  .  .  .  .  .  }
   487  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   488  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   489  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
   490  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 393)
   491  .  .  .  .  .  .  .  .  .  .  }
   492  .  .  .  .  .  .  .  .  .  }
   493  .  .  .  .  .  .  .  .  .  Ellipsis: -
   494  .  .  .  .  .  .  .  .  .  Rparen: -
   495  .  .  .  .  .  .  .  .  }
   496  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  }
   498  .  .  .  .  .  }
   499  .  .  .  .  .  Rbrace: -
   500  .  .  .  .  }
   501  .  .  .  }
   502  .  .  .  3: *ast.ReturnStmt {
   503  .  .  .  .  Return: -
   504  .  .  .  .  Results: []ast.Expr (len = 2) {
   505  .  .  .  .  .  0: *ast.Ident {
   506  .  .  .  .  .  .  NamePos: -
   507  .  .  .  .  .  .  Name: "ks"
   508  .  .  .  .  .  .  Obj: *(obj @ 260)
   509  .  .  .  .  .  }
   510  .  .  .  .  .  1: *ast.Ident {
   511  .  .  .  .  .  .  NamePos: -
   512  .  .  .  .  .  .  Name: "vs"
   513  .  .  .  .  .  .  Obj: *(obj @ 322)
   514  .  .  .  .  .  }
   515  .  .  .  .  }
   516  .  .  .  }
   517  .  .  }
   518  .  .  Rbrace: -
   519  .  }
   520  }
