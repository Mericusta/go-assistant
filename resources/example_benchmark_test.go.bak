     0  *ast.File {
     1  .  Package: -
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: -
     4  .  .  Name: "resources"
     5  .  }
     6  .  Decls: []ast.Decl (len = 2) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: -
     9  .  .  .  Tok: import
    10  .  .  .  Lparen: -
    11  .  .  .  Specs: []ast.Spec (len = 1) {
    12  .  .  .  .  0: *ast.ImportSpec {
    13  .  .  .  .  .  Path: *ast.BasicLit {
    14  .  .  .  .  .  .  ValuePos: -
    15  .  .  .  .  .  .  Kind: STRING
    16  .  .  .  .  .  .  Value: "\"testing\""
    17  .  .  .  .  .  }
    18  .  .  .  .  .  EndPos: -
    19  .  .  .  .  }
    20  .  .  .  }
    21  .  .  .  Rparen: -
    22  .  .  }
    23  .  .  1: *ast.FuncDecl {
    24  .  .  .  Name: *ast.Ident {
    25  .  .  .  .  NamePos: -
    26  .  .  .  .  Name: "Benchmark_ExampleFunc1"
    27  .  .  .  .  Obj: *ast.Object {
    28  .  .  .  .  .  Kind: func
    29  .  .  .  .  .  Name: "Benchmark_ExampleFunc1"
    30  .  .  .  .  .  Decl: *(obj @ 23)
    31  .  .  .  .  }
    32  .  .  .  }
    33  .  .  .  Type: *ast.FuncType {
    34  .  .  .  .  Func: -
    35  .  .  .  .  Params: *ast.FieldList {
    36  .  .  .  .  .  Opening: -
    37  .  .  .  .  .  List: []*ast.Field (len = 1) {
    38  .  .  .  .  .  .  0: *ast.Field {
    39  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    40  .  .  .  .  .  .  .  .  0: *ast.Ident {
    41  .  .  .  .  .  .  .  .  .  NamePos: -
    42  .  .  .  .  .  .  .  .  .  Name: "b"
    43  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    44  .  .  .  .  .  .  .  .  .  .  Kind: var
    45  .  .  .  .  .  .  .  .  .  .  Name: "b"
    46  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 38)
    47  .  .  .  .  .  .  .  .  .  }
    48  .  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  }
    50  .  .  .  .  .  .  .  Type: *ast.StarExpr {
    51  .  .  .  .  .  .  .  .  Star: -
    52  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
    53  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    54  .  .  .  .  .  .  .  .  .  .  NamePos: -
    55  .  .  .  .  .  .  .  .  .  .  Name: "testing"
    56  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    58  .  .  .  .  .  .  .  .  .  .  NamePos: -
    59  .  .  .  .  .  .  .  .  .  .  Name: "B"
    60  .  .  .  .  .  .  .  .  .  }
    61  .  .  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  }
    64  .  .  .  .  .  }
    65  .  .  .  .  .  Closing: -
    66  .  .  .  .  }
    67  .  .  .  }
    68  .  .  .  Body: *ast.BlockStmt {
    69  .  .  .  .  Lbrace: -
    70  .  .  .  .  List: []ast.Stmt (len = 4) {
    71  .  .  .  .  .  0: *ast.DeclStmt {
    72  .  .  .  .  .  .  Decl: *ast.GenDecl {
    73  .  .  .  .  .  .  .  TokPos: -
    74  .  .  .  .  .  .  .  Tok: type
    75  .  .  .  .  .  .  .  Lparen: -
    76  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    77  .  .  .  .  .  .  .  .  0: *ast.TypeSpec {
    78  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
    79  .  .  .  .  .  .  .  .  .  .  NamePos: -
    80  .  .  .  .  .  .  .  .  .  .  Name: "args"
    81  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    82  .  .  .  .  .  .  .  .  .  .  .  Kind: type
    83  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
    84  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 77)
    85  .  .  .  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  .  .  .  Assign: -
    88  .  .  .  .  .  .  .  .  .  Type: *ast.StructType {
    89  .  .  .  .  .  .  .  .  .  .  Struct: -
    90  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {
    91  .  .  .  .  .  .  .  .  .  .  .  Opening: -
    92  .  .  .  .  .  .  .  .  .  .  .  Closing: -
    93  .  .  .  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  .  .  .  .  Incomplete: false
    95  .  .  .  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  Rparen: -
    99  .  .  .  .  .  .  }
   100  .  .  .  .  .  }
   101  .  .  .  .  .  1: *ast.AssignStmt {
   102  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   103  .  .  .  .  .  .  .  0: *ast.Ident {
   104  .  .  .  .  .  .  .  .  NamePos: -
   105  .  .  .  .  .  .  .  .  Name: "tests"
   106  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   107  .  .  .  .  .  .  .  .  .  Kind: var
   108  .  .  .  .  .  .  .  .  .  Name: "tests"
   109  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 101)
   110  .  .  .  .  .  .  .  .  }
   111  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  TokPos: -
   114  .  .  .  .  .  .  Tok: :=
   115  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   116  .  .  .  .  .  .  .  0: *ast.CompositeLit {
   117  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
   118  .  .  .  .  .  .  .  .  .  Lbrack: -
   119  .  .  .  .  .  .  .  .  .  Elt: *ast.StructType {
   120  .  .  .  .  .  .  .  .  .  .  Struct: -
   121  .  .  .  .  .  .  .  .  .  .  Fields: *ast.FieldList {
   122  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   123  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   124  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   125  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   126  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   127  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   128  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
   129  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   130  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   131  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "name"
   132  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 124)
   133  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   134  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   137  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   138  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
   139  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  .  .  .  .  .  .  }
   141  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   142  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 141)
   150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   152  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "args"
   156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 81)
   157  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   158  .  .  .  .  .  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   161  .  .  .  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  .  .  .  Incomplete: false
   163  .  .  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  .  .  Lbrace: -
   166  .  .  .  .  .  .  .  .  Rbrace: -
   167  .  .  .  .  .  .  .  .  Incomplete: false
   168  .  .  .  .  .  .  .  }
   169  .  .  .  .  .  .  }
   170  .  .  .  .  .  }
   171  .  .  .  .  .  2: *ast.ExprStmt {
   172  .  .  .  .  .  .  X: *ast.CallExpr {
   173  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   174  .  .  .  .  .  .  .  .  X: *ast.Ident {
   175  .  .  .  .  .  .  .  .  .  NamePos: -
   176  .  .  .  .  .  .  .  .  .  Name: "b"
   177  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 43)
   178  .  .  .  .  .  .  .  .  }
   179  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   180  .  .  .  .  .  .  .  .  .  NamePos: -
   181  .  .  .  .  .  .  .  .  .  Name: "ResetTimer"
   182  .  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  .  }
   184  .  .  .  .  .  .  .  Lparen: -
   185  .  .  .  .  .  .  .  Ellipsis: -
   186  .  .  .  .  .  .  .  Rparen: -
   187  .  .  .  .  .  .  }
   188  .  .  .  .  .  }
   189  .  .  .  .  .  3: *ast.ForStmt {
   190  .  .  .  .  .  .  For: -
   191  .  .  .  .  .  .  Init: *ast.AssignStmt {
   192  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   193  .  .  .  .  .  .  .  .  0: *ast.Ident {
   194  .  .  .  .  .  .  .  .  .  NamePos: -
   195  .  .  .  .  .  .  .  .  .  Name: "i"
   196  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   197  .  .  .  .  .  .  .  .  .  .  Kind: var
   198  .  .  .  .  .  .  .  .  .  .  Name: "i"
   199  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 191)
   200  .  .  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  .  }
   202  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  .  TokPos: -
   204  .  .  .  .  .  .  .  Tok: :=
   205  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   206  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   207  .  .  .  .  .  .  .  .  .  ValuePos: -
   208  .  .  .  .  .  .  .  .  .  Kind: INT
   209  .  .  .  .  .  .  .  .  .  Value: "0"
   210  .  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   214  .  .  .  .  .  .  .  X: *ast.Ident {
   215  .  .  .  .  .  .  .  .  NamePos: -
   216  .  .  .  .  .  .  .  .  Name: "i"
   217  .  .  .  .  .  .  .  .  Obj: *(obj @ 196)
   218  .  .  .  .  .  .  .  }
   219  .  .  .  .  .  .  .  OpPos: -
   220  .  .  .  .  .  .  .  Op: <
   221  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
   222  .  .  .  .  .  .  .  .  X: *ast.Ident {
   223  .  .  .  .  .  .  .  .  .  NamePos: -
   224  .  .  .  .  .  .  .  .  .  Name: "b"
   225  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 43)
   226  .  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   228  .  .  .  .  .  .  .  .  .  NamePos: -
   229  .  .  .  .  .  .  .  .  .  Name: "N"
   230  .  .  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   234  .  .  .  .  .  .  .  X: *ast.Ident {
   235  .  .  .  .  .  .  .  .  NamePos: -
   236  .  .  .  .  .  .  .  .  Name: "i"
   237  .  .  .  .  .  .  .  .  Obj: *(obj @ 196)
   238  .  .  .  .  .  .  .  }
   239  .  .  .  .  .  .  .  TokPos: -
   240  .  .  .  .  .  .  .  Tok: ++
   241  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  Body: *ast.BlockStmt {
   243  .  .  .  .  .  .  .  Lbrace: -
   244  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   245  .  .  .  .  .  .  .  .  0: *ast.ForStmt {
   246  .  .  .  .  .  .  .  .  .  For: -
   247  .  .  .  .  .  .  .  .  .  Init: *ast.AssignStmt {
   248  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   249  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   250  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   251  .  .  .  .  .  .  .  .  .  .  .  .  Name: "index"
   252  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   253  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   254  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "index"
   255  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 247)
   256  .  .  .  .  .  .  .  .  .  .  .  .  }
   257  .  .  .  .  .  .  .  .  .  .  .  }
   258  .  .  .  .  .  .  .  .  .  .  }
   259  .  .  .  .  .  .  .  .  .  .  TokPos: -
   260  .  .  .  .  .  .  .  .  .  .  Tok: :=
   261  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   262  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   263  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: -
   264  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   265  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   266  .  .  .  .  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  .  .  .  }
   268  .  .  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   270  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   271  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   272  .  .  .  .  .  .  .  .  .  .  .  Name: "index"
   273  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 252)
   274  .  .  .  .  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  .  .  .  .  OpPos: -
   276  .  .  .  .  .  .  .  .  .  .  Op: !=
   277  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
   278  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   279  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   280  .  .  .  .  .  .  .  .  .  .  .  .  Name: "len"
   281  .  .  .  .  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  .  .  .  .  .  Lparen: -
   283  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   284  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   285  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   286  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "tests"
   287  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 106)
   288  .  .  .  .  .  .  .  .  .  .  .  .  }
   289  .  .  .  .  .  .  .  .  .  .  .  }
   290  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   291  .  .  .  .  .  .  .  .  .  .  .  Rparen: -
   292  .  .  .  .  .  .  .  .  .  .  }
   293  .  .  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  .  .  .  Post: *ast.IncDecStmt {
   295  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   296  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   297  .  .  .  .  .  .  .  .  .  .  .  Name: "index"
   298  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 252)
   299  .  .  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  .  .  .  TokPos: -
   301  .  .  .  .  .  .  .  .  .  .  Tok: ++
   302  .  .  .  .  .  .  .  .  .  }
   303  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   304  .  .  .  .  .  .  .  .  .  .  Lbrace: -
   305  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   306  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ExprStmt {
   307  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   308  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   309  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: -
   310  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ExampleFunc1"
   311  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   312  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: -
   313  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   314  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: -
   315  .  .  .  .  .  .  .  .  .  .  .  .  }
   316  .  .  .  .  .  .  .  .  .  .  .  }
   317  .  .  .  .  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  .  .  .  .  Rbrace: -
   319  .  .  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  .  }
   321  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  Rbrace: -
   323  .  .  .  .  .  .  }
   324  .  .  .  .  .  }
   325  .  .  .  .  }
   326  .  .  .  .  Rbrace: -
   327  .  .  .  }
   328  .  .  }
   329  .  }
   330  .  FileStart: -
   331  .  FileEnd: -
   332  .  Scope: *ast.Scope {
   333  .  .  Objects: map[string]*ast.Object (len = 1) {
   334  .  .  .  "Benchmark_ExampleFunc1": *(obj @ 27)
   335  .  .  }
   336  .  }
   337  .  Imports: []*ast.ImportSpec (len = 1) {
   338  .  .  0: *(obj @ 12)
   339  .  }
   340  .  Unresolved: []*ast.Ident (len = 4) {
   341  .  .  0: *(obj @ 53)
   342  .  .  1: *(obj @ 136)
   343  .  .  2: *(obj @ 278)
   344  .  .  3: *(obj @ 308)
   345  .  }
   346  }
